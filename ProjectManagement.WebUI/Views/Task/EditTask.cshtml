@model ProjectManagement.WebUI.Models.TaskEditViewModel

@using ProjectManagement.WebUI.Helpers

@{
    ViewBag.Title = "EditTask";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>EditTask</h2>

@using (Html.BeginForm("EditTask", "Task"))

{
    @Html.EditorFor(model => model.Id)

    <div class="row">
        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row">
        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row">
        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label" })
            @Html.DropDownListFor(model => model.Status, Model.StatusAll, htmlAttributes: new { @class = "form-control" })
        </div>

        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "control-label" })
            @CustomHelper.ClassedDropDownList("Priority", Model.Priority.ToString(), Model.PriorityAll)
        </div>
    </div>

    <div class="row">
        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new {@class = "control-label"})
            @Html.EditorFor(model => model.StartDate, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.StartDate, "", new {@class = "text-danger"})
        </div>

        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new {@class = "control-label"})
            @Html.EditorFor(model => model.EndDate, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.EndDate, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="row" ng-app="UserSearch" ng-controller="userSearchCtrl" ng-init="init(@(Model.Id))">

        <div class="row">
            <div class="col-md-4">
                <h3>Пользователи</h3>

                <ul>
                    <li ng-repeat="user in users">{{user.Name}}</li>
                </ul>
            </div>
            <div class="col-md-4">
                <h3>Добавить пользователя</h3>

                <div class="form-group">
                    <input type="text" class="form-control" ng-model="searchInput" ng-change="inputSearchFieldListener()"/>

                    <ul class="popup-suggestion-box">
                        <li ng-repeat="user in foundUsers" ng-click="userItemClick($index)" ng-bind-html="user.Name | searchfilter:searchInput"></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="form-group col-md-8">
            <input type="submit" class="btn btn-default pull-right" value="Save" />
        </div>
    </div>

    @Html.ActionLink("Cancel and return to List", "ViewProjects", "Home")
}

@section scripts {
    @Scripts.Render("~/Scripts/angular.min.js")
    @Scripts.Render("~/Scripts/angular-sanitize.min.js")
    @Scripts.Render("~/Scripts/app/UserSearch/UserSearchModule.js")
}